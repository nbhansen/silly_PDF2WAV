@startuml PDF_to_Audio_Architecture

!define LAYER_COLOR #E8F4FD
!define DOMAIN_COLOR #FFE6CC
!define APP_COLOR #D4F1D4
!define INFRA_COLOR #F0E6FF
!define WEB_COLOR #FFD4D4

package "Web Layer" <<Rectangle>> {
    class FlaskApp {
        +upload_file()
        +get_pdf_info()
        +index()
        +serve_audio()
    }
}

package "Application Layer" <<Rectangle>> {
    class PDFProcessingService {
        +process_pdf()
        +get_pdf_info()
        +validate_page_range()
    }
    
    class SystemConfig {
        +from_env()
        +validate()
    }
    
    class CompositionRoot {
        +create_pdf_service_from_env()
    }
}

package "Domain Layer" <<Rectangle>> {
    
    class ProcessingRequest {
        pdf_path
        output_name
        page_range
    }
    
    class ProcessingResult {
        success
        audio_files
        error
        combined_mp3_file
    }
    
    ' Core Services
    class TextCleaningService
    class AudioGenerationService  
    class AcademicSSMLService
    
    ' Interfaces
    interface ITTSEngine
    interface ILLMProvider
    interface TextExtractor
    interface TextCleaner
    interface AudioGenerator
    interface PageRangeValidator
}

package "Infrastructure Layer" <<Rectangle>> {
    
    ' TTS Implementations
    class GeminiTTSProvider
    class PiperTTSProvider
    
    ' LLM Implementation
    class GeminiLLMProvider
    
    ' OCR Implementation
    class TesseractOCRProvider
}

' Main Flow Relationships
FlaskApp --> PDFProcessingService : orchestrates
FlaskApp --> SystemConfig : configures

CompositionRoot --> PDFProcessingService : creates
CompositionRoot --> SystemConfig : reads

PDFProcessingService --> ProcessingRequest : processes
PDFProcessingService --> ProcessingResult : returns

PDFProcessingService --> TextCleaningService : uses
PDFProcessingService --> AudioGenerationService : uses
PDFProcessingService --> AcademicSSMLService : uses
PDFProcessingService --> TextExtractor : uses
PDFProcessingService --> PageRangeValidator : uses

' Service Dependencies
TextCleaningService --> ILLMProvider : uses
AudioGenerationService --> ITTSEngine : uses
AcademicSSMLService --> ITTSEngine : uses

' Interface Implementations
GeminiTTSProvider ..|> ITTSEngine
PiperTTSProvider ..|> ITTSEngine
GeminiLLMProvider ..|> ILLMProvider
TesseractOCRProvider ..|> TextExtractor
TesseractOCRProvider ..|> PageRangeValidator
TextCleaningService ..|> TextCleaner
AudioGenerationService ..|> AudioGenerator

' Configuration
SystemConfig ..> GeminiTTSProvider : configures
SystemConfig ..> PiperTTSProvider : configures

note top of FlaskApp : Entry point\nHandles HTTP requests
note top of PDFProcessingService : Main business logic\nOrchestrates pipeline
note top of SystemConfig : Environment-based\nconfiguration
note bottom of ITTSEngine : Strategy pattern\nfor different TTS engines

@enduml